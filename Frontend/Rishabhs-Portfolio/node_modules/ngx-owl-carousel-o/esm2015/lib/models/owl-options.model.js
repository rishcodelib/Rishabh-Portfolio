export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"owl-options.model.js","sourceRoot":"","sources":["../../../../libs/ngx-owl-carousel-o/src/lib/models/owl-options.model.ts"],"names":[],"mappings":"","sourcesContent":["\r\nexport interface BreakpointOptions {\r\n  /**\r\n   * The number of items you want to see on the screen.\r\n   */\r\n  items?: number;\r\n  /**\r\n   * Skips the validation of `items` when the number of slides is less than the number of `items`\r\n   */\r\n  skip_validateItems?: boolean;\r\n  /**\r\n   * Infinity loop. Duplicate last and first items to get loop illusion.\r\n   */\r\n  loop?: boolean;\r\n  /**\r\n   * Center item. Works well with even an odd number of items.\r\n   */\r\n  center?: boolean;\r\n  /**\r\n   * Go backwards when the boundary has reached.\r\n   */\r\n  rewind?: boolean;\r\n\r\n  /**\r\n   * Mouse drag.\r\n   */\r\n  mouseDrag?: boolean;\r\n  /**\r\n   * Touch drag\r\n   */\r\n  touchDrag?: boolean;\r\n  /**\r\n   * Stage pull to edge\r\n   */\r\n  pullDrag?: boolean;\r\n  /**\r\n   * Item pull to edge.\r\n   */\r\n  freeDrag?: boolean;\r\n\r\n  /**\r\n   * margin-right(px) on item\r\n   */\r\n  margin?: number;\r\n  /**\r\n   * Padding left and right on stage (can see neighbours)\r\n   */\r\n  stagePadding?: number;\r\n\r\n  /**\r\n   * Merge items. Works with @Input option 'dataMerge' of CarouselSlideDirective.\r\n   */\r\n  merge?: boolean;\r\n  /**\r\n   * Fit merged items if screen is smaller than items value.\r\n   */\r\n  mergeFit?: boolean;\r\n  /**\r\n   * Set non grid content.  Works with @Input option 'width' of CarouselSlideDirective.\r\n   */\r\n  autoWidth?: boolean;\r\n\r\n  /**\r\n   * Speed Calculate while dragging\r\n   */\r\n  smartSpeed?: number;\r\n  /**\r\n   * Speed Calculate while dragging\r\n   */\r\n  fluidSpeed?: boolean;\r\n  /**\r\n   * Drag end speed\r\n   */\r\n  dragEndSpeed?: number | boolean;\r\n\r\n  /**\r\n   * Responsive refresh rate. Period of time between firing 'resize' event and refreshing carousel.\r\n   */\r\n  responsiveRefreshRate?: number;\r\n\r\n  // Navigation\r\n  /**\r\n   * Show next/prev buttons.\r\n   */\r\n  nav?: boolean;\r\n  /**\r\n   * Navigation speed\r\n   */\r\n  navSpeed?: number | boolean;\r\n  /**\r\n   * Navigation slide by x. 'page' string can be set to slide by page.\r\n   */\r\n  slideBy?: number | string;\r\n  /**\r\n   * Show dots navigation\r\n   */\r\n  dots?: boolean;\r\n  /**\r\n   * Show dots each x item\r\n   */\r\n  dotsEach?: number | boolean;\r\n  /**\r\n   * Pagination speed.\r\n   */\r\n  dotsSpeed?: number | boolean;\r\n\r\n\r\n  // AUTOPLAY ****************************************\r\n  /**\r\n   * Autoplay.\r\n   */\r\n  autoplay?: boolean;\r\n\r\n  /**\r\n   * Autoplay interval timeout\r\n   */\r\n  autoplayTimeout?: number;\r\n\r\n  /**\r\n   * Autoplay speed\r\n   */\r\n  autoplaySpeed?: number | boolean;\r\n\r\n  /**\r\n   * Period of time to start autoplaying or first timeout after firing `mouseleave`. Default is `1`\r\n   */\r\n  autoplayMouseleaveTimeout?: number;\r\n\r\n\r\n  // ANIMATE ****************************************\r\n  /**\r\n   * You can define the transition for the stage you want to use eg. `linear`.\r\n   */\r\n  slideTransition?: string;\r\n\r\n  /**\r\n   * Class for CSS3 animation out.\r\n   */\r\n  animateOut?: string | boolean;\r\n\r\n  /**\r\n   * Class for CSS3 animation in.\r\n   */\r\n  animateIn?: string | boolean;\r\n\r\n  // AUTOHEIGHT ****************************************\r\n  /**\r\n   * Enables changing carousel according to the biggest height of ass active slides providing slides have different height\r\n   */\r\n  autoHeight?: boolean;\r\n\r\n}\r\n\r\nexport interface ResponsiveSettings {\r\n  [key: number]: BreakpointOptions;\r\n}\r\nexport interface OwlOptions {\r\n  /**\r\n   * The number of items you want to see on the screen.\r\n   */\r\n  items?: number;\r\n  /**\r\n   * Skips the validation of `items` when the number of slides is less than the number of `items`\r\n   */\r\n  skip_validateItems?: boolean;\r\n  /**\r\n   * Infinity loop. Duplicate last and first items to get loop illusion.\r\n   */\r\n  loop?: boolean;\r\n  /**\r\n   * Center item. Works well with even an odd number of items.\r\n   */\r\n  center?: boolean;\r\n  /**\r\n   * Go backwards when the boundary has reached.\r\n   */\r\n  rewind?: boolean;\r\n\r\n  /**\r\n   * Mouse drag.\r\n   */\r\n  mouseDrag?: boolean;\r\n  /**\r\n   * Touch drag\r\n   */\r\n  touchDrag?: boolean;\r\n  /**\r\n   * Stage pull to edge\r\n   */\r\n  pullDrag?: boolean;\r\n  /**\r\n   * Item pull to edge.\r\n   */\r\n  freeDrag?: boolean;\r\n\r\n  /**\r\n   * margin-right(px) on item\r\n   */\r\n  margin?: number;\r\n  /**\r\n   * Padding left and right on stage (can see neighbours)\r\n   */\r\n  stagePadding?: number;\r\n\r\n  /**\r\n   * Merge items. Works with @Input option 'dataMerge' of CarouselSlideDirective.\r\n   */\r\n  merge?: boolean;\r\n  /**\r\n   * Fit merged items if screen is smaller than items value.\r\n   */\r\n  mergeFit?: boolean;\r\n  /**\r\n   * Set non grid content.  Works with @Input option 'width' of CarouselSlideDirective.\r\n   */\r\n  autoWidth?: boolean;\r\n\r\n  /**\r\n   * Start position\r\n   */\r\n  startPosition?: number | string;\r\n  /**\r\n   * Change direction from Right to left\r\n   */\r\n  rtl?: boolean;\r\n\r\n  /**\r\n   * Speed Calculate while dragging\r\n   */\r\n  smartSpeed?: number;\r\n  /**\r\n   * Speed Calculate while dragging\r\n   */\r\n  fluidSpeed?: boolean;\r\n  /**\r\n   * Drag end speed\r\n   */\r\n  dragEndSpeed?: number | boolean;\r\n\r\n  /**\r\n   * Object containing responsive options. Can be set to false to remove responsive capabilities.\r\n   */\r\n  responsive?: ResponsiveSettings;\r\n  /**\r\n   * Responsive refresh rate. Period of time between firing 'resize' event and refreshing carousel.\r\n   */\r\n  responsiveRefreshRate?: number;\r\n\r\n  // Navigation\r\n  /**\r\n   * Show next/prev buttons.\r\n   */\r\n  nav?: boolean;\r\n  /**\r\n   * Text in next/prev buttons. HTML allowed.\r\n   */\r\n  navText?: string[];\r\n  /**\r\n   * Navigation speed\r\n   */\r\n  navSpeed?: number | boolean;\r\n  /**\r\n   * Navigation slide by x. 'page' string can be set to slide by page.\r\n   */\r\n  slideBy?: number | string;\r\n  /**\r\n   * Show dots navigation\r\n   */\r\n  dots?: boolean;\r\n  /**\r\n   * Show dots each x item\r\n   */\r\n  dotsEach?: number | boolean;\r\n  /**\r\n   * Used with @Input option 'dotContent' of CarouselSlideDirective.\r\n   */\r\n  dotsData?: boolean;\r\n  /**\r\n   * Pagination speed.\r\n   */\r\n  dotsSpeed?: number | boolean;\r\n\r\n\r\n  // AUTOPLAY ****************************************\r\n  /**\r\n   * Autoplay.\r\n   */\r\n  autoplay?: boolean;\r\n\r\n  /**\r\n   * Autoplay interval timeout\r\n   */\r\n  autoplayTimeout?: number;\r\n\r\n  /**\r\n   * Pause on mouse hover\r\n   */\r\n  autoplayHoverPause?: boolean;\r\n\r\n  /**\r\n   * Period of time to start autoplaying or first timeout after firing `mouseleave`. Default is `1`\r\n   */\r\n  autoplayMouseleaveTimeout?: number;\r\n\r\n  /**\r\n   * Autoplay speed\r\n   */\r\n  autoplaySpeed?: number | boolean;\r\n\r\n  // LAZY LOADING ****************************************\r\n  /**\r\n   * Lazy loading of slides with images\r\n   */\r\n  lazyLoad?: boolean;\r\n\r\n  /**\r\n   * Indicates how many items (slides with images) to the right (and left, when loop is true) will be pre-loaded\r\n   */\r\n  lazyLoadEager?: number;\r\n\r\n  // ANIMATE ****************************************\r\n  /**\r\n   * You can define the transition for the stage you want to use eg. `linear`.\r\n   */\r\n  slideTransition?: string;\r\n\r\n  /**\r\n   * Class for CSS3 animation out.\r\n   */\r\n  animateOut?: string | boolean;\r\n\r\n  /**\r\n   * Class for CSS3 animation in.\r\n   */\r\n  animateIn?: string | boolean;\r\n\r\n  // AUTOHEIGHT ****************************************\r\n  /**\r\n   * Enables changing carousel according to the biggest height of ass active slides providing slides have different height\r\n   */\r\n  autoHeight?: boolean;\r\n\r\n  // HASH *****************************************\r\n  /**\r\n   * Enables listening to url hash (fragment) changes\r\n   */\r\n  URLhashListener?: boolean;\r\n}\r\n"]}